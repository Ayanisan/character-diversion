@tailwind base;
@tailwind components;
@tailwind utilities;

.page-enter-active,
.page-leave-active {
  transition: all var(--transition-duration-300) var(--transition-timing-function-default);
}

.page-enter-from,
.page-leave-to {
  opacity: 0;
}

.slide-right-enter-active,
.slide-right-leave-active,
.slide-left-enter-active,
.slide-left-leave-active {
  transition: all var(--transition-duration-300) var(--transition-timing-function-default);
}

.slide-left-enter-from {
  transform: translateX(100%);
  opacity: 0.5;
}
.slide-left-leave-to {
  transform: translateY(100%);
  opacity: 0.5;
}
.slide-right-enter-from {
  transform: scale(0.9);
  opacity: 0.5;
}
.slide-right-leave-to {
  transform: translateX(100%);
  opacity: 0.5;
}

.slide-enter-active,
.slide-leave-active {
  transition: transform var(--transition-duration-300) var(--transition-timing-function-default);
}

.slide-enter-from,
.slide-leave-to {
  transform: translateY(-100%);
}


.list-container, /* apply transition to moving elements */
.list-move, /* apply transition to moving elements */
.list-enter-active,
.list-leave-active {
  transition: all var(--transition-duration-300) ease;
}

.list-enter-from,
.list-leave-to {
  opacity: 0;
  transform: scale(0.95);
}

/* ensure leaving items are taken out of layout flow so that moving
   animations can be calculated correctly. */
.list-leave-active {
  position: absolute;
}


/* 1. declare transition */
.fade-move,
.fade-enter-active,
.fade-leave-active {
  transition: all 0.5s cubic-bezier(0.55, 0, 0.1, 1);
}

/* 2. declare enter from and leave to state */
.fade-enter-from,
.fade-leave-to {
  opacity: 0;
  transform: scaleY(0.9) translate(0px, 0);
}

/* 3. ensure leaving items are taken out of layout flow so that moving
      animations can be calculated correctly. */
.fade-leave-active {
  position: absolute;
}