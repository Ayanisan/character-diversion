const defaultColors = require('tailwindcss/colors')
const colors =  {
  primary: defaultColors.orange,
  secondary: defaultColors.slate,
  neutral: defaultColors.stone,
  slate: defaultColors.slate,
  info: defaultColors.blue,
  success: defaultColors.emerald,
  warning: defaultColors.amber,
  alert: defaultColors.red,
  black: defaultColors.black,
  white: defaultColors.white,
  yellow: defaultColors.amber,
  emerald: defaultColors.emerald,
  mint: {
    50: '#fcfffc',
    100: '#fcfffc',
    200: '#e9f5e8',
    300: '#c8dbc7',
    400: '#9cb19c',
    500: '#6d7f6e',
    600: '#485549',
    700: '#313b33',
    800: '#28302b',
    900: '#233027',
  },
  beige: {
    50: 'hsl(60,27%,98%)',
    100: 'hsl(55,14%,96%)',
    200: 'hsl(50,18%,90%)',
    300: 'hsl(45,17%,83%)',
    400: 'hsl(40,16%,64%)',
    500: 'hsl(35,16%,45%)',
    600: 'hsl(30,16%,32%)',
    700: 'hsl(30,19%,25%)',
    800: 'hsl(25,19%,15%)',
    900: 'hsl(25,29%,10%)',
  },
}

module.exports = {
  content: [],
  safelist: Object.keys(colors).map(color => `text-${color}-500/20`),
  tailwindcss: {
    viewer: true,
  },
  theme: {
    fontFamily: {
      sans: [ 'Inter', 'Gramatika', 'sans-serif'],
      hebrew: ['Assistant'],
    },
    colors,
    extend: {
      fontSize: {
        '10xl': '160px',
        '11xl': '176px',
        '12xl': '192px',
        '13xl': '208px',
        '14xl': '224px',
        '15xl': '240px',
        '16xl': '256px',
      },
      gridTemplateColumns: {
        // Complex site-specific row configuration
        'autofill-4': 'repeat(auto-fill, minmax(1rem, 1fr))',
        'autofill-8': 'repeat(auto-fill, minmax(2rem, 1fr))',
        'autofill-12': 'repeat(auto-fill, minmax(3rem, 1fr))',
        'autofill-16': 'repeat(auto-fill, minmax(4rem, 1fr))',
        'autofill-20': 'repeat(auto-fill, minmax(5rem, 1fr))',
        'autofill-24': 'repeat(auto-fill, minmax(6rem, 1fr))',
        'autofill-28': 'repeat(auto-fill, minmax(7rem, 1fr))',
        'autofill-32': 'repeat(auto-fill, minmax(8rem, 1fr))',
        'autofill-36': 'repeat(auto-fill, minmax(9rem, 1fr))',
        'autofill-40': 'repeat(auto-fill, minmax(10rem, 1fr))',
        'autofill-44': 'repeat(auto-fill, minmax(11rem, 1fr))',
        'autofill-48': 'repeat(auto-fill, minmax(12rem, 1fr))',
        'autofill-52': 'repeat(auto-fill, minmax(13rem, 1fr))',
        'autofill-56': 'repeat(auto-fill, minmax(14rem, 1fr))',
        'autofill-60': 'repeat(auto-fill, minmax(15rem, 1fr))',
        'autofill-64': 'repeat(auto-fill, minmax(16rem, 1fr))',
        'autofill-72': 'repeat(auto-fill, minmax(18rem, 1fr))',
        'autofill-80': 'repeat(auto-fill, minmax(20rem, 1fr))',
        'autofill-96': 'repeat(auto-fill, minmax(24rem, 1fr))',
        'autofill-128': 'repeat(auto-fill, minmax(32rem, 1fr))',
        'autofill-160': 'repeat(auto-fill, minmax(40rem, 1fr))',
      },
    },
  },
  plugins: [
    require('tailwind-css-variables')({
      screens: false,
      lineHeight: false,
      letterSpacing: false,
      backgroundSize: false,
      boxShadow: false,
      zIndex: false,
      transitionDuration: 'transition-duration',
      transitionProperty: 'transition-property',
      transitionDelay: 'transition-delay',
      transitionDuration: 'transition-duration',
      transitionTimingFunction: 'transition-timing-function',
      outlineStyle: 'outline-style',
      outlineWidth: 'outline-width',
      outlineOffset: 'outline-offset',
      outlineColor: 'outline-color',
    }),
  ],
  darkMode: 'class',
}
